'''	–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –î–∏—Å–∫–æ—Ä–¥–∞ –∏ –ì–∏—Ç–õ–∞–±–∞
üÑØ	–°—Ç–µ—à–µ–Ω–∫–æ –ê—Ä—Ç—ë–º –∏ –ó–∞–∂–∏–≥–∏–Ω –ë–æ–≥–¥–∞–Ω '''

from os import environ, remove
	''' –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ ‚Äî
		https://docs.python.org/3.12/library/os.html '''
import msgpack
	''' –ë–∏–Ω–∞—Ä–Ω–∞—è —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—à–∏–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ‚Äî
		https://github.com/msgpack/msgpack-python/blob/main/README.md '''
import gitlab, discord 
	''' –û–±–µ—Ä—Ç–∫–∞ –ê–ü–ò –ì–∏—Ç–õ–∞–±–∞ ‚Äî https://python-gitlab.readthedocs.io/en/latest –∏
		–ê–ü–ò –î–∏—Å–∫–æ—Ä–¥–∞ ‚Äî https://discordpy.readthedocs.io/en/latest '''


database = open("database.csv", "w")
database.close()


gitlab_instance = gitlab.Gitlab(url = 'https://gitlab.megu.one', private_token = environ.get("TOKEN_GITLAB")) # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏ —Ç–æ–∫–µ–Ω–∞ —ç–∫–∑–µ–º–ª—è—Ä–∞ –ì–∏—Ç–õ–∞–±–∞
project = gitlab_instance.projects.get(13) # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–¥–∞—á–∏
	''' TODO: –ü—Ä–∏–≤—è–∑–∫–∞ —ç–∫–∑–µ–ø–º–ª—è—Ä–∞ –∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –î–∏—Å–∫–æ—Ä–¥ –ö–∞–Ω–∞–ª—É –≤ –ë–î, –∞ –Ω–µ –≤ –∫–æ–¥–µ '''


intents = discord.Intents.default() # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
intents.message_content = True # —Ç—Ä–µ–±–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–π
	''' –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π —Ç—Ä–µ–±—É–µ–º—ã—Ö –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä,
		¬´–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—á–∞—Ç–∞–µ—Ç¬ª –º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å, –∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å '''

discord_bot = discord.Client(intents=intents) # –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞


    
@discord_bot.event
async def on_message(message): # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
	if message.author == discord_bot.user: # —Å–∞–º–æ–æ–∏–≥–Ω–æ—Ä
		return

	issue_text = message.content.replace("/issue ","") # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–∞–Ω–¥—ã ¬´issue¬ª

	if message.content.startswith('/issue'): # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ –±–∞–∑–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞—á–∏ –Ω–∞ –ì–∏—Ç–õ–∞–±–µ –∏ –æ—Ç—á—ë—Ç –æ–± —ç—Ç–æ–º –≤ –∫–∞–Ω–∞–ª
		if project.issues.create({'title': issue_text,'description': 'Something useful here.'}):
			await message.channel.send("–ó–∞–¥–∞—á–∞ ¬´" + issue_text + "¬ª —Å–æ–∑–¥–∞–Ω–∞.")

	if message.content.startswith('/project'):
		database = open("database.csv", "a+")
		database.write(str({message.channel.id: message.content.replace("/project ","")}) + "\n")
		database.close()
	
	if message.content.startswith('/remove'):
		remove("database.csv")


discord_bot.run(environ.get("TOKEN_DISCORD"))


'''	TODO: –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –≤ –ö–æ–º–∞–Ω–¥—ã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Äî
	https://discordpy.readthedocs.io/en/latest/interactions/api.html#application-commands:

tree_commands = discord.app_commands.CommandTree(discord_bot) # –û–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
	if message.content.startswith('/project'):
		slovar.update({message.channel.id: message.content.replace("/project ","")})
		await message.channel.send(slovar)
slovar = dict()
command_issue_extras = dict()
@tree_commands.command(name="issue", description="—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –Ω–∞ GitLab", nsfw=False, auto_locale_strings=False)
 async def issue(interaction):
	await interaction.response.send_message(f"Pong", ephemeral=True)
add_command(*command_issue, guild=None, guilds=None, override=True)
asyncio.run(sync(*command_issue, guild=None))
'''